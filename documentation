# Documentation de Débogage - Serveur ClassCord
**Date de résolution :** 2025-06-16
**Auteur :** delcoco95
**Problème initial :** Erreur "Address already in use" lors du démarrage du serveur

## 1. Identification du Problème

### Symptômes initiaux :
```bash
Traceback (most recent call last):
  File "/home/nedjb/Documents/classcord-server/server_classcord.py", line 107, in <module>
    main()
  File "/home/nedjb/Documents/classcord-server/server_classcord.py", line 99, in main
    server_socket.bind((HOST, PORT))
OSError: [Errno 98] Address already in use
```

Ce message d'erreur indiquait que le port 12345 était déjà utilisé ou n'avait pas été correctement libéré lors d'un arrêt précédent du serveur.

## 2. Solution Appliquée

### 2.1 Modification du Code Serveur
Une seule ligne a été ajoutée dans la fonction `main()` du fichier `server_classcord.py` :

```python
def main():
    load_users()
    server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    server_socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)  # Ligne ajoutée
    server_socket.bind((HOST, PORT))
    server_socket.listen()
```

Cette modification permet au socket de réutiliser immédiatement l'adresse, même si elle était précédemment utilisée.

### 2.2 Tests de Validation

#### Test du Serveur
```bash
python3 server_classcord.py
```
Résultat attendu :
```
[INIT] Utilisateurs chargés: []
[DEMARRAGE] Serveur en écoute sur 0.0.0.0:12345
```

#### Test du Client
Nous avons créé un script de test (`test_client.py`) pour vérifier les fonctionnalités de base :
```python
import socket
import json

def send_json_message(sock, message):
    json_data = json.dumps(message)
    sock.send((json_data + '\n').encode('utf-8'))

client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
client.connect(('localhost', 12345))

# Test d'enregistrement
register_message = {
    "type": "register",
    "username": "testuser",
    "password": "testpass"
}

# Suite du code de test...
```

### 2.3 Résultats des Tests

#### Côté Serveur :
```
[CONNEXION] Nouvelle connexion depuis ('127.0.0.1', 55776)
[RECU] ('127.0.0.1', 55776) >> {"type": "register", "username": "testuser", "password": "testpass"}
[SAVE] Utilisateurs sauvegardés.
[RECU] ('127.0.0.1', 55776) >> {"type": "login", "username": "testuser", "password": "testpass"}
[LOGIN] testuser connecté
```

#### Côté Client :
```
Envoi demande d'enregistrement...
Réponse du serveur: {"type": "register", "status": "ok"}

Envoi demande de connexion...
Réponse du serveur: {"type": "login", "status": "ok"}
```

## 3. Points Clés à Retenir

1. **Gestion des Sockets :** L'option `SO_REUSEADDR` est cruciale pour éviter les problèmes de port déjà utilisé lors du redémarrage du serveur.

2. **Architecture du Serveur :**
   - Port d'écoute : 12345
   - Interface : 0.0.0.0 (toutes les interfaces)
   - Stockage utilisateurs : fichier 'users.pkl'

3. **Fonctionnalités Testées :**
   - Enregistrement d'utilisateur
   - Connexion
   - Gestion des messages
   - Déconnexion propre

## 4. Procédure de Démarrage

1. **Démarrer le Serveur :**
```bash
cd ~/Documents/classcord-server
python3 server_classcord.py
```

2. **Tester avec le Client :**
```bash
# Dans un nouveau terminal
cd ~/Documents/classcord-server
python3 test_client.py
```

## 5. Dépannage Futur

Si l'erreur "Address already in use" réapparaît :
1. Vérifier qu'aucune autre instance du serveur n'est en cours
2. S'assurer que l'option `SO_REUSEADDR` est bien présente
3. En dernier recours, redémarrer le système
